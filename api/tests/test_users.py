import pytest
from werkzeug.security import check_password_hash
from datetime import datetime
from ..db.models import User


def test_signup(client, random_username, random_email, random_password):
    cur_time = datetime.now()
    resp = client.post('/users', json=dict(
        username=random_username, email=random_email, password=random_password
    ))
    assert resp['id'] > 0

    # convert the time response and assert that the user was just created
    created_time = datetime.strptime(resp['created_at'], '%Y-%m-%dT%H:%M:%SZ')
    assert (created_time - cur_time).total_seconds() < 5
    assert resp['updated_at'] == resp['created_at']
    assert resp['username'] == random_username
    assert resp['avatar_url'] != ""
    assert resp['data'] == []

    # assert that certain fields never show up
    assert 'password' not in resp.keys()
    assert 'password_hash' not in resp.keys()

    # but since we have DB access, actually verify the password was saved
    # correctly, and that no 'password' field exists on the user
    user = User.query.filter_by(id=resp['id']).first()
    assert pytest.raises(AttributeError, lambda: user.password)
    assert check_password_hash(user.password_hash, random_password)
