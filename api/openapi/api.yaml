openapi: "3.0.0"
info:
  version: 1.0.0
  title: OpenTestData
  license:
    name: MIT
paths:
  /ping:
    get:
      summary: server responds with PONG
      operationId: api.handlers.general.ping
      responses:
        '200':
          description: Successful ping
          content:
            application/json:
              schema:
                type: string
  /users:
    post:
      summary: Create a new user
      operationId: api.handlers.users.signup
      requestBody:
        description: Data needed to create a new User
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
      responses:
        '200':
          description: New User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/login:
    post:
      summary: Log in and retrieve an access token
      operationId: api.handlers.auth.login
      requestBody:
        description: Login details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Auth token
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
  /users/confirm_email/{token}:
    get:
      summary: Confirm an e-mail address
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: The e-mail confirmation token
      operationId: api.handlers.users.confirm_email
      responses:
        '200':
          description: Auth token
          content:
            application/json:
              schema:
                properties:
                  confirmed:
                    type: boolean
  /users/{id}:
    get:
      summary: Get details of a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      operationId: api.handlers.users.detail
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - jwt: []
    post:
      summary: Update details for a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      operationId: api.handlers.users.update
      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - jwt: []


components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: api.handlers.auth.check_token
  schemas:
    Base:
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    User:
      allOf:
        - $ref: '#/components/schemas/Base'
        - properties:
            username:
              type: string
              maxLength: 80
              minLength: 1
            avatar_url:
              type: string
            data:
              type: array
              items:
                $ref: '#/components/schemas/Datum'
    SignUp:
      properties:
        username:
          type: string
          maxLength: 80
          minLength: 1
        email:
          type: string
          maxLength: 120
          minLength: 5
        password:
          type: string
          minLength: 8 
      required:
        - username
        - email
        - password        
    UpdateUser:
      properties:
        email:
          type: string
          maxLength: 120
          minLength: 5
        password:
          type: string
          minLength: 8 
    Login:
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    Datum:
      allOf:
        - $ref: '#/components/schemas/Base'
        - properties:
            name:
              type: string
              maxLength: 100
              minLength: 1
            type:
              type: string
              enum:
                - 'NULL'
                - BOOL
                - NUM
                - STR
            mode:
              type: string
              enum:
                - NEUTRAL
                - POS
                - NEG
                - EDGE
                - DESTRUCTIVE
            datum:
              type: string
              maxLength: 1024
